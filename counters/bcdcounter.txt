module bcdcounter(
    input clk,
    output q3,
    output q2,
    output q1,
    output q0
    );
    wire w1,w2,w3,w4,w5;
    TFF f0(clk,1,q0);
    and a1(w1,q0,~q3);
    TFF f1(clk,w1,q1);
    and a2(w2,q1,q0);
    TFF f2(clk,w2,q2);
    and a3(w3,q3,q0);
    and a4(w4,q2,q1,q0);
    or a5(w5,w3,w4);
    TFF f3(clk,w5,q3);
    endmodule
    
    module TFF(
    input clk,
    input t,
    output q
    );
    reg q;
    initial
    begin
    q=1'b0;
    end
    always@(negedge clk)
    begin 
    case(t)
    1'b0:q=q;
    1'b1:q=~q;
    endcase
    end
  
endmodule


module bcdcounter_tb;

reg clk;
wire q0,q1,q2,q3;
bcdcounter a1(clk,q0,q1,q2,q3);
initial
begin
    clk=0;
    forever #10 clk=~clk;
end
endmodule