module full_subtractor_behave(
    input a,
    input b,
    input c,
    output diff,
    output borrow
    );
    reg diff,borrow;
        always@(a or b or c)
        begin
        if((a==1'b0)&&(b==1'b0)&&(c==1'b0))
        begin
        diff=0;
        borrow=0;
        end
        else if(a==1'b0&&b==1'b0&&c==1'b1)
        begin
        diff=1;
        borrow=1;
        end
        else if((a==1'b0)&&(b==1'b1)&&(c==1'b0))
        begin
        diff=1;
        borrow=1;
        end
        else if((a==1'b0)&&(b==1'b1)&&(c==1'b1))
        begin
        diff=0;
        borrow=1;
        end
        else if((a==1'b1)&&(b==1'b0)&&(c==1'b0))
        begin
        diff=1;
        borrow=0;
        end   
        else if((a==1'b1)&&(b==1'b0)&&(c==1'b1))
        begin
        diff=0;
        borrow=0;
        end
        else if((a==1'b1)&&(b==1'b1)&&(c==1'b0))
        begin
        diff=0;
        borrow=0;
        end
        else if((a==1'b1)&&(b==1'b1)&&(c==1'b1))
        begin
        diff=1;
        borrow=1;
        end
        end  
endmodule


module full_subtractor_behave_tb;
reg a,b,c;
wire diff,borrow;
full_subtractor_behave a1(a,b,c,diff,borrow);
initial
begin
a=0;b=0;c=0;
#10 a=0;b=0;c=1;
#10 a=0;b=1;c=0;
#10 a=0;b=1;c=1;
#10 a=1;b=0;c=0;
#10 a=1;b=0;c=1;
#10 a=1;b=1;c=0;
#10 a=1;b=1;c=1;
end
endmodule
