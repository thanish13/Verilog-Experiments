module asynmod12(
    input clk,
    output q3,
    output q2,
    output q1,
    output q0
    );
    wire clr;
    TFF f3(1,clk,clr,q3);
    TFF f2(1,q3,clr,q2);
    TFF f1(1,q2,clr,q1);
    TFF f0(1,q1,clr,q0);
    assign clr=~(q0&q1);
    
endmodule

 module TFF(
        input T,
        input clk,
        input clr,
        output reg q
        );
        initial begin
        q=1'b0;
        end
        always@(posedge clk)
        begin
        if (clr==0)
        begin
        q=0;
        end
        else if (clr==1)
        case(T)
        1'b0:q<=q;
        1'b1:q<=~q;
        endcase
        end    
endmodule


module asyncmod12_tb;
wire q3,q2,q1,q0;
reg clk;
asynmod12 b1(clk,q3,q2,q1,q0);
initial
begin
clk=0;
forever #10 clk=~clk;
end
endmodule